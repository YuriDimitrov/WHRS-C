{"!name":"sap.ui.fl","!version":"1.18.0","!define":{"sap.ui.fl.descriptorRelated.api.DescriptorChangeFactory_obj":{"!type":"fn()","prototype":"sap.ui.fl.descriptorRelated.api.DescriptorChangeFactory"},"sap.ui.fl.descriptorRelated.api.DescriptorVariant_obj":{"!type":"fn(mParameters: Object, mFileContent: Object, bDeletion?: Boolean, oSettings: sap.ui.fl.registry.Settings)","prototype":"sap.ui.fl.descriptorRelated.api.DescriptorVariant"},"sap.ui.fl.descriptorRelated.api.DescriptorVariant":{"!constructorDescription":"Descriptor Variant","!module":"sap/ui/fl/descriptorRelated/api/DescriptorVariantFactory","submit":{"!description":"Submits the descriptor variant to the backend","!static":false,"!category":"function","!type":"fn() -> Promise"},"addDescriptorInlineChange":{"!description":"Adds a descriptor inline change to the descriptor variant","!static":false,"!category":"function","!type":"fn(oDescriptorInlineChange: sap.ui.fl.descriptorRelated.api.DescriptorInlineChange) -> Promise","parameters":{"oDescriptorInlineChange":"type: sap.ui.fl.descriptorRelated.api.DescriptorInlineChange, description: the inline change"}},"setPackage":{"!description":"Set package (for ABAP Backend)","!static":false,"!category":"function","!type":"fn(sPackage: String) -> Promise","parameters":{"sPackage":"type: string, description: ABAP package"}},"!proto":"sap.ui.base.Object","!category":"class","setTransportRequest":{"!description":"Set transport request (for ABAP Backend)","!static":false,"!category":"function","!type":"fn(sTransportRequest: String) -> Promise","parameters":{"sTransportRequest":"type: string, description: ABAP transport request"}},"getJson":{"!description":"Returns a copy of the JSON object of the descriptor variant","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.fl.descriptorRelated":{"!description":"Descriptor Related","!module":"sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory","!helpDescription":"Descriptor Related","!category":"namespace","api":"sap.ui.fl.descriptorRelated.api"},"sap.ui.fl.transport":{"horizontalScrolling":{"!description":"Indicates if user can scroll horizontally inside dialog when the content is bigger than the content area. Dialog detects if there's sap.m.NavContainer, sap.m.Page, sap.m.ScrollContainer or sap.m.SplitContainer as direct child added to dialog. If there is, dialog will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"escapeHandler":{"!description":"This property expects a function with one parameter of type <code>Promise<\/code>. In the function you should call either <code>resolve()<\/code> or <code>reject()<\/code> on the <code>Promise<\/code> object.<br/> The function allows you to define custom behaviour which will be executed when the ESCAPE key is pressed. By default when the ESCAPE key is pressed the Dialog is immediately closed.","!category":"enum","!type":"Object"},"icon":{"!description":"Icon displayed in the dialog's header. This icon is invisible on the iOS platform and it's density aware. You can use the density convention (@2, @1.5, etc.) to provide higher resolution image for higher density screen.","!category":"enum","!type":"sap.ui.core.URI"},"!category":"namespace","title":{"!description":"Title text appears in the dialog header.","!category":"enum","!type":"String"},"type":{"!description":"The type of the dialog. In some themes, the type \"message\" will limit the dialog's width within 480px on tablet and desktop.","!category":"enum","!type":"sap.m.DialogType"},"pkg":{"!description":"An ABAP package that can be used as default for the ABAP package selection.","!category":"enum","!type":"String"},"stretch":{"!description":"Determines if the dialog will be stretched to full screen. This property is only applicable to standard dialog and message type dialog ignores this property.","!category":"enum","!type":"Boolean"},"contentWidth":{"!description":"Preferred width of content in Dialog. This property affects the width of dialog on phone in landscape mode, tablet or desktop, because the dialog has a fixed width on phone in portrait mode. If the preferred width is less than the minimum width of dilaog or more than the available width of the screen, it will be overwritten by the min or max value. The current mininum value of dialog width on tablet is 400px.","!category":"enum","!type":"sap.ui.core.CSSSize"},"hidePackage":{"!description":"Flag indicating whether the selection of an ABAP package is to be hidden or not.","!category":"enum","!type":"Boolean"},"draggable":{"!description":"Indicates whether the dialog is draggable. If this property is set to true, the dialog will be draggable by it's header. This property has a default value false. The Dialog can be draggable only in desktop mode.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"TransportSelection":"sap.ui.fl.transport.TransportSelection_obj","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.","!category":"enum","!type":"[String]"},"state":{"!description":"The state affects the icon and the title color. If other than \"None\" is set, a predefined icon will be added to the dialog. Setting icon property will overwrite the predefined icon. The default value is \"None\" which doesn't add any icon to the Dialog control. This property is by now only supported by blue crystal theme.","!category":"enum","!type":"sap.ui.core.ValueState"},"stretchOnPhone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.13.1 Please use the new stretch property instead. This enables a stretched dialog even on tablet and desktop. If you want to achieve the same effect as stretchOnPhone, please set the stretch with jQuery.device.is.phone, then dialog is only stretched when runs on phone.<br>Determines whether the dialog will displayed on full screen on a phone.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.","!category":"enum","!type":"Boolean"},"verticalScrolling":{"!description":"Indicates if user can scroll vertically inside dialog when the content is bigger than the content area. Dialog detects if there's sap.m.NavContainer, sap.m.Page, sap.m.ScrollContainer or sap.m.SplitContainer as direct child added to dialog. If there is, dialog will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.","!category":"enum","!type":"Boolean"},"resizable":{"!description":"Indicates whether the dialog is resizable. the dialog is resizable. If this property is set to true, the dialog will have a resize handler in it's bottom right corner. This property has a default value false. The Dialog can be resizable only in desktop mode.","!category":"enum","!type":"Boolean"},"showHeader":{"!description":"Determines whether the header is shown inside the dialog. If this property is set to true, the text and icon property are ignored. This property has a default value true.","!category":"enum","!type":"Boolean"},"TransportDialog":"sap.ui.fl.transport.TransportDialog_obj","contentHeight":{"!description":"Preferred height of content in Dialog. If the preferred height is bigger than the available space on screen, it will be overwritten by the maximum available height on screen in order to make sure that dialog isn't cut off.","!category":"enum","!type":"sap.ui.core.CSSSize"},"transports":{"!description":"The set of ABAP transport requests that can be selected by a user.","!category":"enum","!type":"Object"},"lrepObject":{"!description":"The LREP object for which as transport request has to be selected","!category":"enum","!type":"Object"}},"sap.ui.fl.variants.VariantModel":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","extend":{"!description":"Creates a new subclass of class sap.ui.fl.variants.VariantModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.json.JSONModel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.fl.variants.VariantModel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"/**\nConstructor for a new sap.ui.fl.variants.VariantModel model.","getCurrentVariantReference":{"!description":"Returns the current variant for a given variant management control","!static":false,"!category":"function","!type":"fn(sVariantManagementReference: String) -> String","parameters":{"sVariantManagementReference":"type: String, description: The variant management Ref"}},"!module":"sap/ui/fl/variants/VariantModel","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","!proto":"sap.ui.model.json.JSONModel","!category":"class","_switchToVariant":{"!description":"Returns the variants for a given variant management Ref","!static":false,"!category":"function","!type":"fn(sVariantManagementReference: String, sNewVariantReference: String) -> promise","parameters":{"sVariantManagementReference":"type: String, description: The variant management Ref","sNewVariantReference":"type: String, description: The newly selected variant Ref"}}},"sap.ui.fl.descriptorRelated.api":{"!description":"Descriptor Related Apis","DescriptorChange":"sap.ui.fl.descriptorRelated.api.DescriptorChange_obj","DescriptorVariant":"sap.ui.fl.descriptorRelated.api.DescriptorVariant_obj","DescriptorVariantFactory":"sap.ui.fl.descriptorRelated.api.DescriptorVariantFactory","!module":"sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory","!helpDescription":"Descriptor Related Apis","DescriptorInlineChangeFactory":"sap.ui.fl.descriptorRelated.api.DescriptorInlineChangeFactory","!category":"namespace","DescriptorChangeFactory":"sap.ui.fl.descriptorRelated.api.DescriptorChangeFactory_obj","DescriptorInlineChange":"sap.ui.fl.descriptorRelated.api.DescriptorInlineChange_obj"},"sap.ui.fl.transport.TransportSelection":{"!module":"sap/ui/fl/transport/TransportSelection","openTransportSelection":{"!description":"Opens the transport selection dialog","!static":false,"!category":"function","!type":"fn(oChange?: sap.ui.fl.Change, oControl: Object) -> Promise","parameters":{"oChange":"type: sap.ui.fl.Change, description: the change for which the transport information should be retrieved","oControl":"type: object, description: undefined"}},"selectTransport":{"!description":"Selects a transport request for a given LREP object. First checks if the Adaptation Transport Organizer (ATO) is enabled If ATO is enabled and the layered repository object is in the CUSTOMER layer, the request 'ATO_NOTIFICATION' has to be used. This request triggers in the back end that the change is added to an ATO collection. If ATO is not enabled or LREP object not in CUSTOMER layer: If the LREP object is already assigned to an open transport request or the LREP object is assigned to a local ABAP package, no dialog to select a transport is started. Instead the success callback is invoked directly. The transport dialog is shown if a package or a transport request has still to be selected, so if more than one transport request is available for the current user and the LREP object is not locked in an open transport request.","!static":false,"!category":"function","!type":"fn(oObjectInfo: Object, fOkay: fn(), fError: fn(), bCompactMode: Boolean, oControl: Object)","parameters":{"oObjectInfo":"type: object, description: the LREP object, which has the attributes name, name space, type, layer and package.","fError":"type: function, description: call-back to be invoked when an error occurred during selection of a transport request.","fOkay":"type: function, description: call-back to be invoked when a transport request has successfully been selected.","bCompactMode":"type: boolean, description: flag indicating whether the transport dialog should be opened in compact mode.","oControl":"type: object, description: Control instance"}},"!proto":"sap.ui.base.Object","!category":"class","setTransports":{"!description":"Sets the transports for all changes.","!static":false,"!category":"function","!type":"fn(aChanges: Array, oControl: Object) -> Promise","parameters":{"aChanges":"type: array, description: array of {sap.ui.fl.Change}","oControl":"type: object, description: object of the root control for the transport"}}},"sap.ui.fl.descriptorRelated.api.DescriptorInlineChange":{"!constructorDescription":"Descriptor Inline Change","!module":"sap/ui/fl/descriptorRelated/api/DescriptorInlineChangeFactory","!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.fl.descriptorRelated.api.DescriptorInlineChangeFactory":{"create_app_removeTechnicalAttributes":{"!description":"Creates an inline change of change type appdescr_app_removeTechnicalAttributes","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_removeDataSource":{"!description":"Creates an inline change of change type appdescr_app_removeDataSource","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_setTitle":{"!description":"Creates an inline change of change type appdescr_app_setTitle","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_ui5_addNewModel":{"!description":"Creates an inline change of change type appdescr_ui5_addNewModel","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_changeDataSource":{"!description":"Creates an inline change of change type appdescr_app_changeDataSource","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"!category":"namespace","create_app_addNewDataSource":{"!description":"Creates an inline change of change type appdescr_app_addNewDataSource","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_removeAllInboundsExceptOne":{"!description":"Creates an inline change of change type appdescr_app_removeAllInboundsExceptOne","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_smb_changeNamespace":{"!description":"Creates an inline change of change type appdescr_smb_changeNamespace","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_setDestination":{"!description":"Creates an inline change of change type appdescr_app_setDestination","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"!description":"Factory for Descriptor Inline Changes","create_ui5_replaceComponentUsage":{"!description":"Creates an inline change of change type appdescr_ui5_replaceComponentUsage","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_setKeywords":{"!description":"Creates an inline change of change type appdescr_app_setKeywords","!static":"true","!category":"function","!type":"fn(mParameters: Object, mTexts?: Object) -> Promise"},"create_smb_addNamespace":{"!description":"Creates an inline change of change type appdescr_smb_addNamespace","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_addAnnotationsToOData":{"!description":"Creates an inline change of change type appdescr_app_addAnnotationsToOData","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_ui_setIcon":{"!description":"Creates an inline change of change type appdescr_ui_setIcon","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_removeInbound":{"!description":"Creates an inline change of change type appdescr_app_removeInbound","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_removeOutbound":{"!description":"Creates an inline change of change type appdescr_app_removeOutbound","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_ui5_addLibraries":{"!description":"Creates an inline change of change type appdescr_ui5_addLibraries","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_ovp_addNewCard":{"!description":"Creates an inline change of change type appdescr_ovp_addNewCard","!static":"true","!category":"function","!type":"fn(mParameters: Object, mTexts?: Object) -> Promise"},"create_flp_setFccApp":{"!description":"Creates an inline change of change type appdescr_flp_setFccApp","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_addNewInbound":{"!description":"Creates an inline change of change type appdescr_app_addNewInbound","!static":"true","!category":"function","!type":"fn(mParameters: Object, mTexts?: Object) -> Promise"},"create_ui_generic_app_setMainPage":{"!description":"Creates an inline change of change type appdescr_ui_generic_app_setMainPage","!static":"true","!category":"function","!type":"fn(mParameters: Object, mTexts?: Object) -> Promise"},"create_ovp_removeCard":{"!description":"Creates an inline change of change type appdescr_ovp_removeCard","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_setShortTitle":{"!description":"Creates an inline change of change type appdescr_app_setShortTitle","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"createDescriptorInlineChange":{"!description":"Creates an inline change","!static":"true","!category":"function","!type":"fn(sDescriptorChangeType: String, mParameters: Object, mTexts?: Object) -> Promise"},"!module":"sap/ui/fl/descriptorRelated/api/DescriptorInlineChangeFactory","!helpDescription":"Factory for Descriptor Inline Changes","create_app_addTechnicalAttributes":{"!description":"Creates an inline change of change type appdescr_app_addTechnicalAttributes","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_changeOutbound":{"!description":"Creates an inline change of change type appdescr_app_changeOutbound","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_addNewOutbound":{"!description":"Creates an inline change of change type appdescr_app_addNewOutbound","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_changeInbound":{"!description":"Creates an inline change of change type appdescr_app_changeInbound","!static":"true","!category":"function","!type":"fn(mParameters: Object, mTexts?: Object) -> Promise"},"create_app_setDescription":{"!description":"Creates an inline change of change type appdescr_app_setDescription","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_setInfo":{"!description":"Creates an inline change of change type appdescr_app_setInfo","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"},"create_app_setSubTitle":{"!description":"Creates an inline change of change type appdescr_app_setSubTitle","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"}},"sap.ui.fl.transport.TransportDialog":{"!description":"The Transport Dialog Control can be used to implement a value help for selecting an ABAP package and transport request. It is not a generic utility, but part of the Variantmanament and therefore cannot be used in any other application.","getHidePackage":{"!description":"Gets current value of property {@link #getHidePackage hidePackage}.\n\nFlag indicating whether the selection of an ABAP package is to be hidden or not.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:cancel cancel} event of this <code>sap.ui.fl.transport.TransportDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.fl.transport.TransportDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.fl.transport.TransportDialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setLrepObject":{"!description":"The LREP object for which as transport request has to be selected. The property can only be set once and afterwards it cannot be changed.","!static":false,"!category":"function","!type":"fn(oObject: Object)","parameters":{"oObject":"type: object, description: an LREP object for which as transport request has to be selected. The object has the attributes name, namespace and type."}},"!proto":"sap.m.Dialog","setPkg":{"!description":"An ABAP package that can be used as default for the ABAP package selection. The property can only be set once and afterwards it cannot be changed.","!static":false,"!category":"function","!type":"fn(sPackage: String)","parameters":{"sPackage":"type: string, description: an ABAP package that can be used as default for the ABAP package selection."}},"!category":"class","getLrepObject":{"!description":"Gets current value of property {@link #getLrepObject lrepObject}.\n\nThe LREP object for which as transport request has to be selected","!static":false,"!category":"function","!type":"fn() -> Object"},"setTransports":{"!description":"The set of ABAP transport requests that can be selected by a user.","!static":false,"!category":"function","!type":"fn(aSelection: Array)","parameters":{"aSelection":"type: array, description: the set of ABAP transport requests that can be selected by a user."}},"detachOk":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:ok ok} event of this <code>sap.ui.fl.transport.TransportDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.fl.transport.TransportDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.fl.transport.TransportDialog with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setHidePackage":{"!description":"Flag indicating whether the selection of an ABAP package is to be hidden or not.","!static":false,"!category":"function","!type":"fn(bHide: Boolean)","parameters":{"bHide":"type: boolean, description: if set to <code>true<\/code>, the package selection is hidden."}},"!constructorDescription":"Constructor for a new transport/TransportDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPkg pkg} : string<\/li>\n<li>{@link #getTransports transports} : any<\/li>\n<li>{@link #getLrepObject lrepObject} : any<\/li>\n<li>{@link #getHidePackage hidePackage} : boolean<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:ok ok} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Dialog#constructor sap.m.Dialog}\ncan be used as well.","!module":"sap/ui/fl/transport/TransportDialog","!helpDescription":"The Transport Dialog Control can be used to implement a value help for selecting an ABAP package and transport request. It is not a generic utility, but part of the Variantmanament and therefore cannot be used in any other application.","fireOk":{"!description":"Fires event {@link #event:ok ok} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.fl.transport.TransportDialog","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getTransports":{"!description":"Gets current value of property {@link #getTransports transports}.\n\nThe set of ABAP transport requests that can be selected by a user.","!static":false,"!category":"function","!type":"fn() -> Object"},"attachOk":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:ok ok} event of this <code>sap.ui.fl.transport.TransportDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.fl.transport.TransportDialog<\/code> itself.\n\nThis event will be fired when the user clicks the OK button on the dialog.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.fl.transport.TransportDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.fl.transport.TransportDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:cancel cancel} event of this <code>sap.ui.fl.transport.TransportDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.fl.transport.TransportDialog<\/code> itself.\n\nThis event will be fired when the user clicks the Cancel button on the dialog.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.fl.transport.TransportDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.fl.transport.TransportDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getPkg":{"!description":"Gets current value of property {@link #getPkg pkg}.\n\nAn ABAP package that can be used as default for the ABAP package selection.","!static":false,"!category":"function","!type":"fn() -> String"},"fireCancel":{"!description":"Fires event {@link #event:cancel cancel} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.fl.transport.TransportDialog","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}}},"sap.ui.fl.LrepConnector":{"deleteFile":{"!description":"Delete a file via REST call.","!static":false,"!category":"function","!type":"fn(sNamespace: String, sName: String, sType: String, sLayer: String, sChangelist: String) -> Object","parameters":{"sType":"type: String, description: File type extension","sLayer":"type: String, description: File layer","sName":"type: String, description: Name of the change","sChangelist":"type: String, description: The transport ID, optional","sNamespace":"type: String, description: The abap package goes here. It is needed to identify the change."}},"setRequestUrlPrefix":{"!description":"Prefix for request URL can be set in exceptional cases when consumer needs to add a prefix to the URL","!static":false,"!category":"function","!type":"fn(sRequestUrlPrefix: String)","parameters":{"sRequestUrlPrefix":"type: String, description: request URL prefix which must start with a (/) and must not end with a (/)"}},"loadChanges":{"!description":"Loads the changes for the given component class name.","!static":false,"!category":"function","!type":"fn(oComponent: Object, mPropertyBag?: map) -> Promise","parameters":{"mPropertyBag":"type: map, description: Contains additional data needed for reading changes","oComponent":"type: object, description: Contains component data needed for reading changes"}},"!proto":"sap.ui.base.Object","upsert":{"!description":"Upserts a given change or variant via REST call.","!static":false,"!category":"function","!type":"fn(sNamespace: String, sName: String, sType: String, sLayer: String, sContent: String, sContentType: String, sChangelist: String) -> Object","parameters":{"sContent":"type: String, description: File content to be saved as string","sType":"type: String, description: File type extension","sLayer":"type: String, description: File layer","sContentType":"type: String, description: Content type (e.g. application/json, text/plain, ...), default: application/json","sName":"type: String, description: Name of the change","sChangelist":"type: String, description: The transport ID, optional","sNamespace":"type: String, description: The abap package goes here. It is needed to identify the change."}},"update":{"!description":"Update a change or variant via REST call.","!static":false,"!category":"function","!type":"fn(oPayload: Object, sChangeName: String, sChangelist: String, bIsVariant: Boolean) -> Object","parameters":{"bIsVariant":"type: Boolean, description: is variant?","sChangeName":"type: String, description: Name of the change","sChangelist":"type: String, description: (optional) The transport ID.","oPayload":"type: Object, description: The content which is send to the server"}},"!category":"class","attachSentRequest":{"!description":"Registers a callback for a sent request to the back end. The callback is only called once for each change. Each call is done with an object similar to the resolve of the promises containing a <code>status<\/code> of the response from the back end i.e. <code>success<\/code>, a <code>response<\/code> containing the change processed in this request","!static":true,"!category":"function","!type":"fn(fCallback: fn())","parameters":{"fCallback":"type: function, description: function called after all related promises are resolved"}},"listContent":{"!description":"Retrieves the content for a given namespace and layer via REST call.","!static":false,"!category":"function","!type":"fn(sNamespace: String, sLayer: String) -> Object","parameters":{"sLayer":"type: String, description: File layer","sNamespace":"type: String, description: The file namespace goes here. It is needed to identify the change."}},"detachSentRequest":{"!description":"Deregisters a callback for a sent request to the back end if the callback was registered","!static":true,"!category":"function","!type":"fn(fCallback: fn())","parameters":{"fCallback":"type: function, description: function called after all related promises are resolved"}},"loadSettings":{"!description":"Loads flexibility settings.","!static":false,"!category":"function","!type":"fn() -> Promise"},"deleteChange":{"!description":"Delete a change or variant via REST call.","!static":false,"!category":"function","!type":"fn(mParameters: String, bIsVariant: Boolean) -> Object","parameters":{"bIsVariant":"type: Boolean, description: is it a variant?","mParameters":"type: String, description: property bag"}},"!constructorDescription":"Provides the connectivity to the ABAP based LRep REST-service","!module":"sap/ui/fl/LrepConnector","getFileAttributes":{"!description":"Retrieves the file attributes for a given resource in the LREP.","!static":false,"!category":"function","!type":"fn(sNamespace: String, sName: String, sType: String, sLayer: String) -> Object","parameters":{"sType":"type: String, description: File type extension","sLayer":"type: String, description: File layer","sName":"type: String, description: Name of the change","sNamespace":"type: String, description: The abap package goes here. It is needed to identify the change. Default LREP namespace is \"localchange\"."}},"getStaticResource":{"!description":"Authenticated access to a resource in the Lrep","!static":false,"!category":"function","!type":"fn(sNamespace: String, sName: String, sType: String, bIsRuntime: Boolean) -> Object","parameters":{"sType":"type: String, description: File type extension","sName":"type: String, description: Name of the change","sNamespace":"type: String, description: The abap package goes here. It is needed to identify the change. Default LREP namespace is \"localchange\".","bIsRuntime":"type: Boolean, description: The stored file content is handed over to the lrep provider that can dynamically adjust the content to the runtime context (e.g. do text replacement to the users' logon language) before"}},"create":{"!description":"Creates a change or variant via REST call.","!static":false,"!category":"function","!type":"fn(oPayload: Object, sChangelist?: String, bIsVariant: Boolean) -> Object","parameters":{"bIsVariant":"type: Boolean, description: is variant?","sChangelist":"type: String, description: The transport ID.","oPayload":"type: Object, description: The content which is send to the server"}},"send":{"!description":"Send a request to the back end","!static":false,"!category":"function","!type":"fn(sUri: String, sMethod: String, oData: Object, mOptions: Object) -> Promise","parameters":{"sMethod":"type: String, description: HTTP-method to be used by this request (default GET)","oData":"type: Object, description: Payload of the request","sUri":"type: String, description: Relative URL for this request","mOptions":"type: Object, description: Additional options which should be used in the request"}}},"sap":{"sap":"sap","ui":"sap.ui","!category":"namespace"},"sap.ui.fl.descriptorRelated.api.DescriptorChange_obj":{"!type":"fn(mChangeFile: Object, oInlineChange: sap.ui.fl.descriptorRelated.api.DescriptorInlineChange, oSettings: sap.ui.fl.registry.Settings)","prototype":"sap.ui.fl.descriptorRelated.api.DescriptorChange"},"sap.ui":{"fl":"sap.ui.fl","!category":"namespace"},"sap.ui.fl.descriptorRelated.api.DescriptorVariantFactory":{"!description":"Factory for Descriptor Variants","createDeletion":{"!description":"Creates a descriptor variant deletion","!static":"true","!category":"function","!type":"fn(sId: String) -> Promise"},"!module":"sap/ui/fl/descriptorRelated/api/DescriptorVariantFactory","!helpDescription":"Factory for Descriptor Variants","!category":"namespace","createForExisting":{"!description":"Creates a descriptor variant instance for an existing descriptor variant id","!static":"true","!category":"function","!type":"fn(sId: String) -> Promise"},"createNew":{"!description":"Creates a new descriptor variant","!static":"true","!category":"function","!type":"fn(mParameters: Object) -> Promise"}},"sap.ui.fl.variants.VariantManagement_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.fl.variants.VariantManagement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.fl.variants.VariantManagement"},"sap.ui.fl.descriptorRelated.api.DescriptorInlineChange_obj":{"!type":"fn(sChangeType: String, mParameters?: Object, mTexts?: Object)","prototype":"sap.ui.fl.descriptorRelated.api.DescriptorInlineChange"},"sap.ui.fl.transport.TransportDialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.fl.transport.TransportDialog with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.fl.transport.TransportDialog"},"sap.ui.fl.transport.TransportSelection_obj":{"!type":"fn(Utils: sap.ui.fl.Utils, Transports: sap.ui.fl.transport.Transports, TransportDialog: sap.ui.fl.transport.TransportDialog, FlexSettings: sap.ui.fl.registry.Settings)","prototype":"sap.ui.fl.transport.TransportSelection"},"sap.ui.fl.descriptorRelated.api.DescriptorChangeFactory":{"!constructorDescription":"Factory for Descriptor Changes","!module":"sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory","!proto":"sap.ui.base.Object","!category":"class","createNew":{"!description":"Creates a new descriptor change","!static":false,"!category":"function","!type":"fn(sReference: String, oInlineChange: Object, sLayer: String, oAppComponent: Object) -> Promise","parameters":{"oAppComponent":"type: object, description: application component to get the version from","sReference":"type: string, description: the descriptor id for which the change is created","oInlineChange":"type: object, description: the inline change instance","sLayer":"type: string, description: layer of the descriptor change"}}},"sap.ui.fl.variants.VariantModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.fl.variants.VariantModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.json.JSONModel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oData: Object, oFlexController: Object, oComponent: Object, bObserve: Boolean)","prototype":"sap.ui.fl.variants.VariantModel"},"sap.ui.fl.variants.VariantManagement":{"setSelectedVariantKey":{"!description":"Sets the new selected variant.","!static":false,"!category":"function","!type":"fn(sKey: String) -> Object","parameters":{"sKey":"type: String, description: the variant key whic should be selected."}},"setShowShare":{"!description":"Sets a new value for property {@link #getShowShare showShare}.\n\nIndicates that Share is visible in the Save Variant and the Manage Variants dialogs. Share allows you to share variants with other users.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowShare: Boolean) -> sap.ui.fl.variants.VariantManagement","parameters":{"bShowShare":"type: boolean, description: New value for property <code>showShare<\/code>"}},"getShowSaveAs":{"!description":"Gets current value of property {@link #getShowSaveAs showSaveAs}.\n\nDetermine the visibility of the 'Save As' button in the variant list control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowSetAsDefault":{"!description":"Gets current value of property {@link #getShowSetAsDefault showSetAsDefault}.\n\nIndicates that set as default is visible in the Save Variant and the Manage Variants dialogs.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowManage":{"!description":"Sets a new value for property {@link #getShowManage showManage}.\n\nDetermine the visibility of the 'Manage' button in the variant list control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowManage: Boolean) -> sap.ui.fl.variants.VariantManagement","parameters":{"bShowManage":"type: boolean, description: New value for property <code>showManage<\/code>"}},"setShowSave":{"!description":"Sets a new value for property {@link #getShowSave showSave}.\n\nDetermine the visibility of the 'Save' button in the variant list control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSave: Boolean) -> sap.ui.fl.variants.VariantManagement","parameters":{"bShowSave":"type: boolean, description: New value for property <code>showSave<\/code>"}},"getShowVariantListFooter":{"!description":"Gets current value of property {@link #getShowVariantListFooter showVariantListFooter}.\n\nDetermine the visibility of the footer of the variant list.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","setShowExecuteOnSelection":{"!description":"Sets a new value for property {@link #getShowExecuteOnSelection showExecuteOnSelection}.\n\nIndicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowExecuteOnSelection: Boolean) -> sap.ui.fl.variants.VariantManagement","parameters":{"bShowExecuteOnSelection":"type: boolean, description: New value for property <code>showExecuteOnSelection<\/code>"}},"attachSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:save save} event of this <code>sap.ui.fl.variants.VariantManagement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.fl.variants.VariantManagement<\/code> itself.\n\nThis event is fired when the Save Variant dialog is closed with OK for a variant.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.fl.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.fl.variants.VariantManagement<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","removeFor":{"!description":"Removes an for from the association named {@link #getFor for}.","!static":false,"!category":"function","!type":"fn(vFor: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vFor":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The for to be removed or its index or ID"}},"setShowFavorites":{"!description":"Sets a new value for property {@link #getShowFavorites showFavorites}.\n\nIndicates if favorites can be created.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFavorites: Boolean) -> sap.ui.fl.variants.VariantManagement","parameters":{"bShowFavorites":"type: boolean, description: New value for property <code>showFavorites<\/code>"}},"getIndustrySolutionMode":{"!description":"Gets current value of property {@link #getIndustrySolutionMode industrySolutionMode}.\n\nIf set to<code>true<\/code>, the scenario is an industry-specific solution.<br> <b>Node:<\/b>This flag is only used internally in the app variant scenarios.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowExecuteOnSelection":{"!description":"Gets current value of property {@link #getShowExecuteOnSelection showExecuteOnSelection}.\n\nIndicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setVendorLayer":{"!description":"Sets a new value for property {@link #getVendorLayer vendorLayer}.\n\nIndicates if the vendor layer is active.<br> <b>Node:<\/b>This flag is only used internally in the app variant scenarios.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bVendorLayer: Boolean) -> sap.ui.fl.variants.VariantManagement","parameters":{"bVendorLayer":"type: boolean, description: New value for property <code>vendorLayer<\/code>"}},"!constructorDescription":"Constructor for a new VariantManagement.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowExecuteOnSelection showExecuteOnSelection} : boolean (default: false)<\/li>\n<li>{@link #getShowShare showShare} : boolean (default: false)<\/li>\n<li>{@link #getShowSetAsDefault showSetAsDefault} : boolean (default: true)<\/li>\n<li>{@link #getShowFavorites showFavorites} : boolean (default: false)<\/li>\n<li>{@link #getIndustrySolutionMode industrySolutionMode} : boolean (default: false)<\/li>\n<li>{@link #getVendorLayer vendorLayer} : boolean (default: false)<\/li>\n<li>{@link #getManualVariantKey manualVariantKey} : boolean (default: false)<\/li>\n<li>{@link #getShowSave showSave} : boolean (default: true)<\/li>\n<li>{@link #getShowSaveAs showSaveAs} : boolean (default: true)<\/li>\n<li>{@link #getShowManage showManage} : boolean (default: true)<\/li>\n<li>{@link #getShowVariantListFooter showVariantListFooter} : boolean (default: true)<\/li>\n<li>{@link #getInErrorState inErrorState} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFor for} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:save save} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:manage manage} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","openManagementDialog":{"!description":"Opens the manage dialog.","!static":false,"!category":"function","!type":"fn(bCreateAlways: Boolean)","parameters":{"bCreateAlways":"type: boolean, description: in case this is set to <code>true<\/code> the former dialog will be destroyed, before a new one is created."}},"getShowFavorites":{"!description":"Gets current value of property {@link #getShowFavorites showFavorites}.\n\nIndicates if favorites can be created.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFor":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getFor for}.","!static":false,"!category":"function","!type":"fn() -> [[object Object]]"},"getShowManage":{"!description":"Gets current value of property {@link #getShowManage showManage}.\n\nDetermine the visibility of the 'Manage' button in the variant list control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getVariants":{"!description":"Retrieves all variants.","!static":false,"!category":"function","!type":"fn() -> Array"},"addFor":{"!description":"Adds some for into the association {@link #getFor for}.","!static":false,"!category":"function","!type":"fn(vFor: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.fl.variants.VariantManagement","parameters":{"vFor":"type: sap.ui.core.ID|sap.ui.core.Control, description: The for to add; if empty, nothing is inserted"}},"getManualVariantKey":{"!description":"Gets current value of property {@link #getManualVariantKey manualVariantKey}.\n\nIf set to<code>true<\/code>, the key for a vendor variant will be added manually.<br> <b>Node:<\/b>This flag is only used internally in the app variant scenarios.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getShowShare":{"!description":"Gets current value of property {@link #getShowShare showShare}.\n\nIndicates that Share is visible in the Save Variant and the Manage Variants dialogs. Share allows you to share variants with other users.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowVariantListFooter":{"!description":"Sets a new value for property {@link #getShowVariantListFooter showVariantListFooter}.\n\nDetermine the visibility of the footer of the variant list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowVariantListFooter: Boolean) -> sap.ui.fl.variants.VariantManagement","parameters":{"bShowVariantListFooter":"type: boolean, description: New value for property <code>showVariantListFooter<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.fl.variants.VariantManagement.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVendorLayer":{"!description":"Gets current value of property {@link #getVendorLayer vendorLayer}.\n\nIndicates if the vendor layer is active.<br> <b>Node:<\/b>This flag is only used internally in the app variant scenarios.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireManage":{"!description":"Fires event {@link #event:manage manage} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.fl.variants.VariantManagement","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setShowSaveAs":{"!description":"Sets a new value for property {@link #getShowSaveAs showSaveAs}.\n\nDetermine the visibility of the 'Save As' button in the variant list control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSaveAs: Boolean) -> sap.ui.fl.variants.VariantManagement","parameters":{"bShowSaveAs":"type: boolean, description: New value for property <code>showSaveAs<\/code>"}},"getInErrorState":{"!description":"Gets current value of property {@link #getInErrorState inErrorState}.\n\nIndicates that the control is in error state. If set to <code>true<\/code> error message will be displayed whenever the variant is opened.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSelectedVariantKey":{"!description":"Gets the currently selected variant key.","!static":false,"!category":"function","!type":"fn() -> String"},"setManualVariantKey":{"!description":"Sets a new value for property {@link #getManualVariantKey manualVariantKey}.\n\nIf set to<code>true<\/code>, the key for a vendor variant will be added manually.<br> <b>Node:<\/b>This flag is only used internally in the app variant scenarios.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bManualVariantKey: Boolean) -> sap.ui.fl.variants.VariantManagement","parameters":{"bManualVariantKey":"type: boolean, description: New value for property <code>manualVariantKey<\/code>"}},"setIndustrySolutionMode":{"!description":"Sets a new value for property {@link #getIndustrySolutionMode industrySolutionMode}.\n\nIf set to<code>true<\/code>, the scenario is an industry-specific solution.<br> <b>Node:<\/b>This flag is only used internally in the app variant scenarios.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIndustrySolutionMode: Boolean) -> sap.ui.fl.variants.VariantManagement","parameters":{"bIndustrySolutionMode":"type: boolean, description: New value for property <code>industrySolutionMode<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.fl.variants.VariantManagement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setShowSetAsDefault":{"!description":"Sets a new value for property {@link #getShowSetAsDefault showSetAsDefault}.\n\nIndicates that set as default is visible in the Save Variant and the Manage Variants dialogs.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSetAsDefault: Boolean) -> sap.ui.fl.variants.VariantManagement","parameters":{"bShowSetAsDefault":"type: boolean, description: New value for property <code>showSetAsDefault<\/code>"}},"!module":"sap/ui/fl/variants/VariantManagement","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","detachSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:save save} event of this <code>sap.ui.fl.variants.VariantManagement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.fl.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireSave":{"!description":"Fires event {@link #event:save save} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.fl.variants.VariantManagement","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getShowSave":{"!description":"Gets current value of property {@link #getShowSave showSave}.\n\nDetermine the visibility of the 'Save' button in the variant list control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachManage":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:manage manage} event of this <code>sap.ui.fl.variants.VariantManagement<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.fl.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"removeAllFor":{"!description":"Removes all the controls in the association named {@link #getFor for}.","!static":false,"!category":"function","!type":"fn() -> [[object Object]]"},"attachManage":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:manage manage} event of this <code>sap.ui.fl.variants.VariantManagement<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.fl.variants.VariantManagement<\/code> itself.\n\nThis event is fired when users apply changes to variants in the Manage Variants dialog.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.fl.variants.VariantManagement","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.fl.variants.VariantManagement<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setInErrorState":{"!description":"Sets a new value for property {@link #getInErrorState inErrorState}.\n\nIndicates that the control is in error state. If set to <code>true<\/code> error message will be displayed whenever the variant is opened.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bInErrorState: Boolean) -> sap.ui.fl.variants.VariantManagement","parameters":{"bInErrorState":"type: boolean, description: New value for property <code>inErrorState<\/code>"}}},"sap.ui.fl":{"!description":"SAPUI5 library for UI Flexibility and Descriptor Changes and Descriptor Variants.","!module":"sap/ui/fl/library","LrepConnector":"sap.ui.fl.LrepConnector_obj","!helpDescription":"SAPUI5 library for UI Flexibility and Descriptor Changes and Descriptor Variants.","!category":"namespace","transport":"sap.ui.fl.transport","variants":"sap.ui.fl.variants","descriptorRelated":"sap.ui.fl.descriptorRelated"},"sap.ui.fl.descriptorRelated.api.DescriptorChange":{"!constructorDescription":"Descriptor Change","!module":"sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory","submit":{"!description":"Submits the descriptor change to the backend","!static":false,"!category":"function","!type":"fn() -> Promise"},"setPackage":{"!description":"Set package (for ABAP Backend)","!static":false,"!category":"function","!type":"fn(sPackage: String) -> Promise","parameters":{"sPackage":"type: string, description: package"}},"!proto":"sap.ui.base.Object","!category":"class","store":{"!description":"Stores the descriptor change in change persistence","!static":false,"!category":"function","!type":"fn() -> Object"},"setTransportRequest":{"!description":"Set transport request (for ABAP Backend)","!static":false,"!category":"function","!type":"fn(sTransportRequest: String) -> Promise","parameters":{"sTransportRequest":"type: string, description: transport request"}},"getJson":{"!description":"Returns a copy of the JSON object of the descriptor change","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.fl.variants":{"showSetAsDefault":{"!description":"Indicates that set as default is visible in the Save Variant and the Manage Variants dialogs.","!category":"enum","!type":"Boolean"},"showManage":{"!description":"Determine the visibility of the 'Manage' button in the variant list control.","!category":"enum","!type":"Boolean"},"showVariantListFooter":{"!description":"Determine the visibility of the footer of the variant list.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"showFavorites":{"!description":"Indicates if favorites can be created.","!category":"enum","!type":"Boolean"},"industrySolutionMode":{"!description":"If set to<code>true<\/code>, the scenario is an industry-specific solution.<br> <b>Node:<\/b>This flag is only used internally in the app variant scenarios.","!category":"enum","!type":"Boolean"},"!category":"namespace","VariantManagement":"sap.ui.fl.variants.VariantManagement_obj","showSaveAs":{"!description":"Determine the visibility of the 'Save As' button in the variant list control.","!category":"enum","!type":"Boolean"},"manualVariantKey":{"!description":"If set to<code>true<\/code>, the key for a vendor variant will be added manually.<br> <b>Node:<\/b>This flag is only used internally in the app variant scenarios.","!category":"enum","!type":"Boolean"},"vendorLayer":{"!description":"Indicates if the vendor layer is active.<br> <b>Node:<\/b>This flag is only used internally in the app variant scenarios.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"showSave":{"!description":"Determine the visibility of the 'Save' button in the variant list control.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.","!category":"enum","!type":"[String]"},"showExecuteOnSelection":{"!description":"Indicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs.","!category":"enum","!type":"Boolean"},"VariantModel":"sap.ui.fl.variants.VariantModel_obj","showShare":{"!description":"Indicates that Share is visible in the Save Variant and the Manage Variants dialogs. Share allows you to share variants with other users.","!category":"enum","!type":"Boolean"},"inErrorState":{"!description":"Indicates that the control is in error state. If set to <code>true<\/code> error message will be displayed whenever the variant is opened.","!category":"enum","!type":"Boolean"}},"sap.ui.fl.LrepConnector_obj":{"!type":"fn(mParameters?: Object)","prototype":"sap.ui.fl.LrepConnector"}}}